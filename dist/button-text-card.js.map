{"version":3,"file":"button-text-card.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/lib/modify-template.js","../node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/decorators.js","../node_modules/lit-element/lib/css-tag.js","../node_modules/lit-element/lit-element.js","../node_modules/fecha/src/fecha.js","../node_modules/custom-card-helpers/dist/index.m.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection and if one is pending connection the\n        // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n        // update, otherwise requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign({}, element, { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign({}, element, { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options) => \n// Return value typed as any to prevent TypeScript from complaining that\n// standard decorator function signature does not match TypeScript decorator\n// signature\n// TODO(kschaaf): unclear why it was only failing on this decorator and not\n// the others\n((protoOrDescriptor, name) => (name !== undefined) ?\n    legacyEventOptions(options, protoOrDescriptor, name) :\n    standardEventOptions(options, protoOrDescriptor));\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        // The Closure JS Compiler does not always preserve the correct \"this\"\n        // when calling static super methods (b/137460243), so explicitly bind.\n        super.finalize.call(this);\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/**\n * Parse or format dates\n * @class fecha\n */\nvar fecha = {};\nvar token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\nvar twoDigits = '\\\\d\\\\d?';\nvar threeDigits = '\\\\d{3}';\nvar fourDigits = '\\\\d{4}';\nvar word = '[^\\\\s]+';\nvar literal = /\\[([^]*?)\\]/gm;\nvar noop = function () {\n};\n\nfunction regexEscape(str) {\n  return str.replace( /[|\\\\{()[^$+*?.-]/g, '\\\\$&');\n}\n\nfunction shorten(arr, sLen) {\n  var newArr = [];\n  for (var i = 0, len = arr.length; i < len; i++) {\n    newArr.push(arr[i].substr(0, sLen));\n  }\n  return newArr;\n}\n\nfunction monthUpdate(arrName) {\n  return function (d, v, i18n) {\n    var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\n    if (~index) {\n      d.month = index;\n    }\n  };\n}\n\nfunction pad(val, len) {\n  val = String(val);\n  len = len || 2;\n  while (val.length < len) {\n    val = '0' + val;\n  }\n  return val;\n}\n\nvar dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nvar monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nvar monthNamesShort = shorten(monthNames, 3);\nvar dayNamesShort = shorten(dayNames, 3);\nfecha.i18n = {\n  dayNamesShort: dayNamesShort,\n  dayNames: dayNames,\n  monthNamesShort: monthNamesShort,\n  monthNames: monthNames,\n  amPm: ['am', 'pm'],\n  DoFn: function DoFn(D) {\n    return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\n  }\n};\n\nvar formatFlags = {\n  D: function(dateObj) {\n    return dateObj.getDate();\n  },\n  DD: function(dateObj) {\n    return pad(dateObj.getDate());\n  },\n  Do: function(dateObj, i18n) {\n    return i18n.DoFn(dateObj.getDate());\n  },\n  d: function(dateObj) {\n    return dateObj.getDay();\n  },\n  dd: function(dateObj) {\n    return pad(dateObj.getDay());\n  },\n  ddd: function(dateObj, i18n) {\n    return i18n.dayNamesShort[dateObj.getDay()];\n  },\n  dddd: function(dateObj, i18n) {\n    return i18n.dayNames[dateObj.getDay()];\n  },\n  M: function(dateObj) {\n    return dateObj.getMonth() + 1;\n  },\n  MM: function(dateObj) {\n    return pad(dateObj.getMonth() + 1);\n  },\n  MMM: function(dateObj, i18n) {\n    return i18n.monthNamesShort[dateObj.getMonth()];\n  },\n  MMMM: function(dateObj, i18n) {\n    return i18n.monthNames[dateObj.getMonth()];\n  },\n  YY: function(dateObj) {\n    return pad(String(dateObj.getFullYear()), 4).substr(2);\n  },\n  YYYY: function(dateObj) {\n    return pad(dateObj.getFullYear(), 4);\n  },\n  h: function(dateObj) {\n    return dateObj.getHours() % 12 || 12;\n  },\n  hh: function(dateObj) {\n    return pad(dateObj.getHours() % 12 || 12);\n  },\n  H: function(dateObj) {\n    return dateObj.getHours();\n  },\n  HH: function(dateObj) {\n    return pad(dateObj.getHours());\n  },\n  m: function(dateObj) {\n    return dateObj.getMinutes();\n  },\n  mm: function(dateObj) {\n    return pad(dateObj.getMinutes());\n  },\n  s: function(dateObj) {\n    return dateObj.getSeconds();\n  },\n  ss: function(dateObj) {\n    return pad(dateObj.getSeconds());\n  },\n  S: function(dateObj) {\n    return Math.round(dateObj.getMilliseconds() / 100);\n  },\n  SS: function(dateObj) {\n    return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\n  },\n  SSS: function(dateObj) {\n    return pad(dateObj.getMilliseconds(), 3);\n  },\n  a: function(dateObj, i18n) {\n    return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\n  },\n  A: function(dateObj, i18n) {\n    return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\n  },\n  ZZ: function(dateObj) {\n    var o = dateObj.getTimezoneOffset();\n    return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\n  }\n};\n\nvar parseFlags = {\n  D: [twoDigits, function (d, v) {\n    d.day = v;\n  }],\n  Do: [twoDigits + word, function (d, v) {\n    d.day = parseInt(v, 10);\n  }],\n  M: [twoDigits, function (d, v) {\n    d.month = v - 1;\n  }],\n  YY: [twoDigits, function (d, v) {\n    var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\n    d.year = '' + (v > 68 ? cent - 1 : cent) + v;\n  }],\n  h: [twoDigits, function (d, v) {\n    d.hour = v;\n  }],\n  m: [twoDigits, function (d, v) {\n    d.minute = v;\n  }],\n  s: [twoDigits, function (d, v) {\n    d.second = v;\n  }],\n  YYYY: [fourDigits, function (d, v) {\n    d.year = v;\n  }],\n  S: ['\\\\d', function (d, v) {\n    d.millisecond = v * 100;\n  }],\n  SS: ['\\\\d{2}', function (d, v) {\n    d.millisecond = v * 10;\n  }],\n  SSS: [threeDigits, function (d, v) {\n    d.millisecond = v;\n  }],\n  d: [twoDigits, noop],\n  ddd: [word, noop],\n  MMM: [word, monthUpdate('monthNamesShort')],\n  MMMM: [word, monthUpdate('monthNames')],\n  a: [word, function (d, v, i18n) {\n    var val = v.toLowerCase();\n    if (val === i18n.amPm[0]) {\n      d.isPm = false;\n    } else if (val === i18n.amPm[1]) {\n      d.isPm = true;\n    }\n  }],\n  ZZ: ['[^\\\\s]*?[\\\\+\\\\-]\\\\d\\\\d:?\\\\d\\\\d|[^\\\\s]*?Z', function (d, v) {\n    var parts = (v + '').match(/([+-]|\\d\\d)/gi), minutes;\n\n    if (parts) {\n      minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\n      d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\n    }\n  }]\n};\nparseFlags.dd = parseFlags.d;\nparseFlags.dddd = parseFlags.ddd;\nparseFlags.DD = parseFlags.D;\nparseFlags.mm = parseFlags.m;\nparseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\nparseFlags.MM = parseFlags.M;\nparseFlags.ss = parseFlags.s;\nparseFlags.A = parseFlags.a;\n\n\n// Some common format strings\nfecha.masks = {\n  default: 'ddd MMM DD YYYY HH:mm:ss',\n  shortDate: 'M/D/YY',\n  mediumDate: 'MMM D, YYYY',\n  longDate: 'MMMM D, YYYY',\n  fullDate: 'dddd, MMMM D, YYYY',\n  shortTime: 'HH:mm',\n  mediumTime: 'HH:mm:ss',\n  longTime: 'HH:mm:ss.SSS'\n};\n\n/***\n * Format a date\n * @method format\n * @param {Date|number} dateObj\n * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'\n */\nfecha.format = function (dateObj, mask, i18nSettings) {\n  var i18n = i18nSettings || fecha.i18n;\n\n  if (typeof dateObj === 'number') {\n    dateObj = new Date(dateObj);\n  }\n\n  if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {\n    throw new Error('Invalid Date in fecha.format');\n  }\n\n  mask = fecha.masks[mask] || mask || fecha.masks['default'];\n\n  var literals = [];\n\n  // Make literals inactive by replacing them with ??\n  mask = mask.replace(literal, function($0, $1) {\n    literals.push($1);\n    return '@@@';\n  });\n  // Apply formatting rules\n  mask = mask.replace(token, function ($0) {\n    return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\n  });\n  // Inline literal values back into the formatted value\n  return mask.replace(/@@@/g, function() {\n    return literals.shift();\n  });\n};\n\n/**\n * Parse a date string into an object, changes - into /\n * @method parse\n * @param {string} dateStr Date string\n * @param {string} format Date parse format\n * @returns {Date|boolean}\n */\nfecha.parse = function (dateStr, format, i18nSettings) {\n  var i18n = i18nSettings || fecha.i18n;\n\n  if (typeof format !== 'string') {\n    throw new Error('Invalid format in fecha.parse');\n  }\n\n  format = fecha.masks[format] || format;\n\n  // Avoid regular expression denial of service, fail early for really long strings\n  // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n  if (dateStr.length > 1000) {\n    return null;\n  }\n\n  var dateInfo = {};\n  var parseInfo = [];\n  var literals = [];\n  format = format.replace(literal, function($0, $1) {\n    literals.push($1);\n    return '@@@';\n  });\n  var newFormat = regexEscape(format).replace(token, function ($0) {\n    if (parseFlags[$0]) {\n      var info = parseFlags[$0];\n      parseInfo.push(info[1]);\n      return '(' + info[0] + ')';\n    }\n\n    return $0;\n  });\n  newFormat = newFormat.replace(/@@@/g, function() {\n    return literals.shift();\n  });\n  var matches = dateStr.match(new RegExp(newFormat, 'i'));\n  if (!matches) {\n    return null;\n  }\n\n  for (var i = 1; i < matches.length; i++) {\n    parseInfo[i - 1](dateInfo, matches[i], i18n);\n  }\n\n  var today = new Date();\n  if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {\n    dateInfo.hour = +dateInfo.hour + 12;\n  } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\n    dateInfo.hour = 0;\n  }\n\n  var date;\n  if (dateInfo.timezoneOffset != null) {\n    dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\n    date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n      dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\n  } else {\n    date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\n      dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\n  }\n  return date;\n};\n\nexport default fecha;\n","import e from\"fecha\";function t(e){var t=e.split(\":\").map(Number);return 3600*t[0]+60*t[1]+t[2]}var a=function(){try{(new Date).toLocaleDateString(\"i\")}catch(e){return\"RangeError\"===e.name}return!1}()?function(e,t){return e.toLocaleDateString(t,{year:\"numeric\",month:\"long\",day:\"numeric\"})}:function(t){return e.format(t,\"mediumDate\")},n=function(){try{(new Date).toLocaleString(\"i\")}catch(e){return\"RangeError\"===e.name}return!1}()?function(e,t){return e.toLocaleString(t,{year:\"numeric\",month:\"long\",day:\"numeric\",hour:\"numeric\",minute:\"2-digit\"})}:function(t){return e.format(t,\"haDateTime\")},r=function(){try{(new Date).toLocaleTimeString(\"i\")}catch(e){return\"RangeError\"===e.name}return!1}()?function(e,t){return e.toLocaleTimeString(t,{hour:\"numeric\",minute:\"2-digit\"})}:function(t){return e.format(t,\"shortTime\")},i=[60,60,24,7],o=[\"second\",\"minute\",\"hour\",\"day\"];function s(e,t,a){void 0===a&&(a={});var n,r=((a.compareTime||new Date).getTime()-e.getTime())/1e3,s=r>=0?\"past\":\"future\";r=Math.abs(r);for(var c=0;c<i.length;c++){if(r<i[c]){r=Math.floor(r),n=t(\"ui.components.relative_time.duration.\"+o[c],\"count\",r);break}r/=i[c]}return void 0===n&&(n=t(\"ui.components.relative_time.duration.week\",\"count\",r=Math.floor(r))),!1===a.includeTense?n:t(\"ui.components.relative_time.\"+s,\"time\",n)}var c=function(e){return e<10?\"0\"+e:e};function u(e){var t=Math.floor(e/3600),a=Math.floor(e%3600/60),n=Math.floor(e%3600%60);return t>0?t+\":\"+c(a)+\":\"+c(n):a>0?a+\":\"+c(n):n>0?\"\"+n:null}function l(e){var a=t(e.attributes.remaining);if(\"active\"===e.state){var n=(new Date).getTime(),r=new Date(e.last_changed).getTime();a=Math.max(a-(n-r)/1e3,0)}return a}var h=function(e,t,a,n){void 0===n&&(n=!1),e._themes||(e._themes={});var r=t.default_theme;(\"default\"===a||a&&t.themes[a])&&(r=a);var i=Object.assign({},e._themes);if(\"default\"!==r){var o=t.themes[r];Object.keys(o).forEach(function(t){var a=\"--\"+t;e._themes[a]=\"\",i[a]=o[t]})}if(e.updateStyles?e.updateStyles(i):window.ShadyCSS&&window.ShadyCSS.styleSubtree(e,i),n){var s=document.querySelector(\"meta[name=theme-color]\");if(s){s.hasAttribute(\"default-content\")||s.setAttribute(\"default-content\",s.getAttribute(\"content\"));var c=i[\"--primary-color\"]||s.getAttribute(\"default-content\");s.setAttribute(\"content\",c)}}},m=function(e){return\"function\"==typeof e.getCardSize?e.getCardSize():1};function d(e){return e.substr(0,e.indexOf(\".\"))}function f(e){return e.substr(e.indexOf(\".\")+1)}var p=function(e){return e.substr(e.indexOf(\".\")+1)};function v(e){var t=e.language||\"en\";return e.translationMetadata.translations[t]&&e.translationMetadata.translations[t].isRTL||!1}function _(e){return v(e)?\"rtl\":\"ltr\"}function g(e){return d(e.entity_id)}function b(e,t,i){var o,s=g(t);if(\"binary_sensor\"===s)t.attributes.device_class&&(o=e(\"state.\"+s+\".\"+t.attributes.device_class+\".\"+t.state)),o||(o=e(\"state.\"+s+\".default.\"+t.state));else if(t.attributes.unit_of_measurement&&![\"unknown\",\"unavailable\"].includes(t.state))o=t.state+\" \"+t.attributes.unit_of_measurement;else if(\"input_datetime\"===s){var c;if(t.attributes.has_time)if(t.attributes.has_date)c=new Date(t.attributes.year,t.attributes.month-1,t.attributes.day,t.attributes.hour,t.attributes.minute),o=n(c,i);else{var u=new Date;c=new Date(u.getFullYear(),u.getMonth(),u.getDay(),t.attributes.hour,t.attributes.minute),o=r(c,i)}else c=new Date(t.attributes.year,t.attributes.month-1,t.attributes.day),o=a(c,i)}else o=\"zwave\"===s?[\"initializing\",\"dead\"].includes(t.state)?e(\"state.zwave.query_stage.\"+t.state,\"query_stage\",t.attributes.query_stage):e(\"state.zwave.default.\"+t.state):e(\"state.\"+s+\".\"+t.state);return o||(o=e(\"state.default.\"+t.state)||e(\"component.\"+s+\".state.\"+t.state)||t.state),o}var y=function(e){return void 0===e.attributes.friendly_name?p(e.entity_id).replace(/_/g,\" \"):e.attributes.friendly_name||\"\"},w=\"hass:bookmark\",k=\"lovelace\",S=[\"climate\",\"cover\",\"configurator\",\"input_select\",\"input_number\",\"input_text\",\"lock\",\"media_player\",\"scene\",\"script\",\"timer\",\"vacuum\",\"water_heater\",\"weblink\"],x=[\"alarm_control_panel\",\"automation\",\"camera\",\"climate\",\"configurator\",\"cover\",\"fan\",\"group\",\"history_graph\",\"input_datetime\",\"light\",\"lock\",\"media_player\",\"script\",\"sun\",\"updater\",\"vacuum\",\"water_heater\",\"weather\"],D=[\"input_number\",\"input_select\",\"input_text\",\"scene\",\"weblink\"],q=[\"camera\",\"configurator\",\"history_graph\",\"scene\"],R=[\"closed\",\"locked\",\"off\"],T=new Set([\"fan\",\"input_boolean\",\"light\",\"switch\",\"group\",\"automation\"]),E=\"°C\",M=\"°F\",z=\"group.default_view\",A=function(e,t,a,n){n=n||{},a=null==a?{}:a;var r=new Event(t,{bubbles:void 0===n.bubbles||n.bubbles,cancelable:Boolean(n.cancelable),composed:void 0===n.composed||n.composed});return r.detail=a,e.dispatchEvent(r),r},C=new Set([\"call-service\",\"divider\",\"section\",\"weblink\",\"cast\",\"select\"]),L={alert:\"toggle\",automation:\"toggle\",climate:\"climate\",cover:\"cover\",fan:\"toggle\",group:\"group\",input_boolean:\"toggle\",input_number:\"input-number\",input_select:\"input-select\",input_text:\"input-text\",light:\"toggle\",lock:\"lock\",media_player:\"media-player\",remote:\"toggle\",scene:\"scene\",script:\"script\",sensor:\"sensor\",timer:\"timer\",switch:\"toggle\",vacuum:\"toggle\",water_heater:\"climate\",input_datetime:\"input-datetime\"},O=function(e,t){void 0===t&&(t=!1);var a=function(e,t){return n(\"hui-error-card\",{type:\"error\",error:e,config:t})},n=function(e,t){var n=window.document.createElement(e);try{n.setConfig(t)}catch(n){return console.error(e,n),a(n.message,t)}return n};if(!e||\"object\"!=typeof e||!t&&!e.type)return a(\"No type defined\",e);var r=e.type;if(r&&r.startsWith(\"custom:\"))r=r.substr(\"custom:\".length);else if(t)if(C.has(r))r=\"hui-\"+r+\"-row\";else{if(!e.entity)return a(\"Invalid config given.\",e);var i=e.entity.split(\".\",1)[0];r=\"hui-\"+(L[i]||\"text\")+\"-entity-row\"}else r=\"hui-\"+r+\"-card\";if(customElements.get(r))return n(r,e);var o=a(\"Custom element doesn't exist: \"+e.type+\".\",e);o.style.display=\"None\";var s=setTimeout(function(){o.style.display=\"\"},2e3);return customElements.whenDefined(e.type).then(function(){clearTimeout(s),A(o,\"ll-rebuild\",{},o)}),o},j={alert:\"hass:alert\",automation:\"hass:playlist-play\",calendar:\"hass:calendar\",camera:\"hass:video\",climate:\"hass:thermostat\",configurator:\"hass:settings\",conversation:\"hass:text-to-speech\",device_tracker:\"hass:account\",fan:\"hass:fan\",group:\"hass:google-circles-communities\",history_graph:\"hass:chart-line\",homeassistant:\"hass:home-assistant\",homekit:\"hass:home-automation\",image_processing:\"hass:image-filter-frames\",input_boolean:\"hass:drawing\",input_datetime:\"hass:calendar-clock\",input_number:\"hass:ray-vertex\",input_select:\"hass:format-list-bulleted\",input_text:\"hass:textbox\",light:\"hass:lightbulb\",mailbox:\"hass:mailbox\",notify:\"hass:comment-alert\",person:\"hass:account\",plant:\"hass:flower\",proximity:\"hass:apple-safari\",remote:\"hass:remote\",scene:\"hass:google-pages\",script:\"hass:file-document\",sensor:\"hass:eye\",simple_alarm:\"hass:bell\",sun:\"hass:white-balance-sunny\",switch:\"hass:flash\",timer:\"hass:timer\",updater:\"hass:cloud-upload\",vacuum:\"hass:robot-vacuum\",water_heater:\"hass:thermometer\",weblink:\"hass:open-in-new\"};function I(e,t){if(e in j)return j[e];switch(e){case\"alarm_control_panel\":switch(t){case\"armed_home\":return\"hass:bell-plus\";case\"armed_night\":return\"hass:bell-sleep\";case\"disarmed\":return\"hass:bell-outline\";case\"triggered\":return\"hass:bell-ring\";default:return\"hass:bell\"}case\"binary_sensor\":return t&&\"off\"===t?\"hass:radiobox-blank\":\"hass:checkbox-marked-circle\";case\"cover\":return\"closed\"===t?\"hass:window-closed\":\"hass:window-open\";case\"lock\":return t&&\"unlocked\"===t?\"hass:lock-open\":\"hass:lock\";case\"media_player\":return t&&\"off\"!==t&&\"idle\"!==t?\"hass:cast-connected\":\"hass:cast\";case\"zwave\":switch(t){case\"dead\":return\"hass:emoticon-dead\";case\"sleeping\":return\"hass:sleep\";case\"initializing\":return\"hass:timer-sand\";default:return\"hass:z-wave\"}default:return console.warn(\"Unable to find icon for domain \"+e+\" (\"+t+\")\"),w}}var N=function(e,t){var a=t.value||t,n=t.attribute?e.attributes[t.attribute]:e.state;switch(t.operator||\"==\"){case\"==\":return n===a;case\"<=\":return n<=a;case\"<\":return n<a;case\">=\":return n>=a;case\">\":return n>a;case\"!=\":return n!==a;case\"regex\":return n.match(a);default:return!1}},F=function(){var e=document.querySelector(\"home-assistant\");if(e=(e=(e=(e=(e=(e=(e=(e=e&&e.shadowRoot)&&e.querySelector(\"home-assistant-main\"))&&e.shadowRoot)&&e.querySelector(\"app-drawer-layout partial-panel-resolver\"))&&e.shadowRoot||e)&&e.querySelector(\"ha-panel-lovelace\"))&&e.shadowRoot)&&e.querySelector(\"hui-root\")){var t=e.lovelace;return t.current_view=e.___curView,t}return null},B=function(){var e=document.querySelector(\"home-assistant\");if(e=(e=(e=(e=(e=(e=(e=(e=e&&e.shadowRoot)&&e.querySelector(\"home-assistant-main\"))&&e.shadowRoot)&&e.querySelector(\"app-drawer-layout partial-panel-resolver\"))&&e.shadowRoot||e)&&e.querySelector(\"ha-panel-lovelace\"))&&e.shadowRoot)&&e.querySelector(\"hui-root\"))return e.shadowRoot},U=function(e){A(window,\"haptic\",e)},V=function(e,t,a){void 0===a&&(a=!1),a?history.replaceState(null,\"\",t):history.pushState(null,\"\",t),A(window,\"location-changed\",{replace:a})},W=function(e,t,a){void 0===a&&(a=!0);var n,r=d(t),i=\"group\"===r?\"homeassistant\":r;switch(r){case\"lock\":n=a?\"unlock\":\"lock\";break;case\"cover\":n=a?\"open_cover\":\"close_cover\";break;default:n=a?\"turn_on\":\"turn_off\"}return e.callService(i,n,{entity_id:t})},Y=function(e,t){var a=R.includes(e.states[t].state);return W(e,t,a)},G=function(e,t,a,n){var r;if(\"double_tap\"===n&&a.double_tap_action?r=a.double_tap_action:\"hold\"===n&&a.hold_action?r=a.hold_action:\"tap\"===n&&a.tap_action&&(r=a.tap_action),r||(r={action:\"more-info\"}),!r.confirmation||r.confirmation.exemptions&&r.confirmation.exemptions.some(function(e){return e.user===t.user.id})||(U(\"warning\"),confirm(r.confirmation.text||\"Are you sure you want to \"+r.action+\"?\")))switch(r.action){case\"more-info\":(a.entity||a.camera_image)&&A(e,\"hass-more-info\",{entityId:a.entity?a.entity:a.camera_image});break;case\"navigate\":r.navigation_path&&V(0,r.navigation_path);break;case\"url\":r.url_path&&window.open(r.url_path);break;case\"toggle\":a.entity&&(Y(t,a.entity),U(\"success\"));break;case\"call-service\":if(!r.service)return void U(\"failure\");var i=r.service.split(\".\",2);t.callService(i[0],i[1],r.service_data),U(\"success\")}},H=function(e,t,a,n,r){var i;if(r&&a.double_tap_action?i=a.double_tap_action:n&&a.hold_action?i=a.hold_action:!n&&a.tap_action&&(i=a.tap_action),i||(i={action:\"more-info\"}),!i.confirmation||i.confirmation.exemptions&&i.confirmation.exemptions.some(function(e){return e.user===t.user.id})||confirm(i.confirmation.text||\"Are you sure you want to \"+i.action+\"?\"))switch(i.action){case\"more-info\":(a.entity||a.camera_image)&&(A(e,\"hass-more-info\",{entityId:i.entity?i.entity:a.entity?a.entity:a.camera_image}),i.haptic&&U(i.haptic));break;case\"navigate\":i.navigation_path&&(V(0,i.navigation_path),i.haptic&&U(i.haptic));break;case\"url\":i.url_path&&window.open(i.url_path),i.haptic&&U(i.haptic);break;case\"toggle\":a.entity&&(Y(t,a.entity),i.haptic&&U(i.haptic));break;case\"call-service\":if(!i.service)return;var o=i.service.split(\".\",2),s=o[0],c=o[1],u=Object.assign({},i.service_data);\"entity\"===u.entity_id&&(u.entity_id=a.entity),t.callService(s,c,u),i.haptic&&U(i.haptic)}};function J(e){return void 0!==e&&\"none\"!==e.action}function K(e,t,a){if(t.has(\"config\")||a)return!0;if(e._config.entity){var n=t.get(\"hass\");return!n||n.states[e._config.entity]!==e.hass.states[e._config.entity]}return!1}function P(e){return void 0!==e&&\"none\"!==e.action}var Q=function(e,t,a){void 0===a&&(a=!0);var n={};t.forEach(function(t){if(R.includes(e.states[t].state)===a){var r=d(t),i=[\"cover\",\"lock\"].includes(r)?r:\"homeassistant\";i in n||(n[i]=[]),n[i].push(t)}}),Object.keys(n).forEach(function(t){var r;switch(t){case\"lock\":r=a?\"unlock\":\"lock\";break;case\"cover\":r=a?\"open_cover\":\"close_cover\";break;default:r=a?\"turn_on\":\"turn_off\"}e.callService(t,r,{entity_id:n[t]})})};export{t as durationToSeconds,a as formatDate,n as formatDateTime,r as formatTime,s as relativeTime,u as secondsToDuration,l as timerTimeRemaining,h as applyThemesOnElement,m as computeCardSize,d as computeDomain,f as computeEntity,p as computeObjectId,v as computeRTL,_ as computeRTLDirection,b as computeStateDisplay,g as computeStateDomain,y as computeStateName,w as DEFAULT_DOMAIN_ICON,k as DEFAULT_PANEL,S as DOMAINS_WITH_CARD,x as DOMAINS_WITH_MORE_INFO,D as DOMAINS_HIDE_MORE_INFO,q as DOMAINS_MORE_INFO_NO_HISTORY,R as STATES_OFF,T as DOMAINS_TOGGLE,E as UNIT_C,M as UNIT_F,z as DEFAULT_VIEW_ENTITY_ID,O as createThing,j as fixedIcons,I as domainIcon,N as evaluateFilter,A as fireEvent,F as getLovelace,B as getRoot,G as handleAction,H as handleClick,U as forwardHaptic,J as hasAction,K as hasConfigOrEntityChanged,P as hasDoubleClick,V as navigate,Y as toggleEntity,Q as turnOnOffEntities,W as turnOnOffEntity};\n//# sourceMappingURL=index.m.js.map\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","directives","WeakMap","isDirective","o","has","isCEPolyfill","undefined","window","customElements","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","noChange","nothing","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","Template","[object Object]","result","element","this","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","node","nextNode","nodeType","hasAttributes","attributes","count","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","TemplateInstance","template","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","innerHTML","getHTML","isPrimitive","value","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","text","v","t","setAttribute","_getValue","committer","directive","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","event","call","defaultTemplateProcessor","prefix","templateCache","templateCaches","get","stringsArray","keyString","Map","set","join","getTemplateElement","removeNodesFromTemplate","nextActiveIndexInTemplateParts","removeCount","nodesToRemoveInTemplate","currentRemovingNode","forEach","countNodes","startIndex","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","from","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","Boolean","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","microtaskPromise","Promise","resolve","UpdatingElement","HTMLElement","_updateState","_instanceProperties","_updatePromise","_hasConnectedResolver","_changedProperties","_reflectingProperties","initialize","observedAttributes","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","hasOwnProperty","superProperties","getPrototypeOf","k","_ensureClassProperties","noAccessor","prototype","oldValue","_requestUpdate","configurable","enumerable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_saveInstanceProperties","constructor","_v","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_hasRequestedUpdate","_enqueueUpdate","updateComplete","reject","previousUpdatePromise","res","rej","_hasConnected","performUpdate","hasUpdated","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","standardProperty","kind","descriptor","placement","initializer","clazz","assign","property","protoOrDescriptor","proto","legacyProperty","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","css","reduce","acc","idx","textFromCSSResult","flattenStyles","flat","Infinity","arrayFlat","LitElement","_styles","_getUniqueStyles","userStyles","reduceRight","unshift","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","map","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","styleElement","templateResult","render","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","appendInto","litRender","delete","fecha","token","word","literal","noop","shorten","arr","sLen","newArr","len","monthUpdate","arrName","i18n","charAt","toUpperCase","month","pad","val","dayNames","monthNames","monthNamesShort","dayNamesShort","amPm","DoFn","D","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","getMonth","MM","MMM","MMMM","YY","getFullYear","YYYY","h","getHours","hh","H","HH","m","getMinutes","mm","getSeconds","ss","S","round","getMilliseconds","SS","SSS","a","A","ZZ","getTimezoneOffset","floor","abs","parseFlags","day","parseInt","cent","Date","year","hour","minute","second","millisecond","isPm","minutes","timezoneOffset","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","format","mask","i18nSettings","toString","isNaN","getTime","literals","replace","$0","$1","shift","dateStr","dateInfo","parseInfo","newFormat","info","matches","date","today","UTC","toLocaleDateString","toLocaleString","toLocaleTimeString","R","Event","bubbles","cancelable","composed","detail","dispatchEvent","U","G","double_tap_action","hold_action","tap_action","action","confirmation","exemptions","some","user","id","confirm","entity","camera_image","entityId","navigation_path","history","replaceState","pushState","V","url_path","open","callService","entity_id","W","includes","states","state","Y","service","service_data","J","f","args","_config","hass","classOrDescriptor","define","legacyCustomElement","elements","standardCustomElement"],"mappings":"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"}